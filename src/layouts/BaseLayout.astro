---
// Supports weights 100-900
import "@fontsource-variable/onest"

import AppShowcase from "../components/AppShowcase.astro"
import Footer from "../components/Footer.astro"

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <!-- FAVICON -->
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
        <title>{title}</title>
    </head>
    <body>
        <slot />
        <!-- BANFFPAY APP SHOWCASE -->
        <AppShowcase />
        <!-- FOOTER -->
        <Footer />
    </body>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sections = document.querySelectorAll(".observer")
            const observer = new IntersectionObserver(
                (entries) => {
                    entries.forEach((entry) => {
                        const header = entry.target.children[0]
                        const paragraph = entry.target.children[1]
                        if (entry.isIntersecting) {
                            header.classList.remove("text-gray-300")
                            header.classList.add("text-brand-primary-800")
    
                            paragraph.classList.remove("text-gray-300")
                        } else {
                            header.classList.remove("text-brand-primary-800")
                            header.classList.add("text-gray-300")
    
    
                            paragraph.classList.add("text-gray-300")
                        }
                    })
                },
                { threshold: 0.95 }
            )
    
            sections.forEach((section) => {
                observer.observe(section)
            })
        })
    </script>
</html>
